
# 큰 수의 법칙
# 리스트 요소의 개수는 n
# 리스트에서 요소를 m번 더해서 가장 큰 수를 만든다
# 단, 더한 요소가 연속으로 k번 초과는 다른 수를 사용
# 요소의 값이 같을 경우 중복 사용 가능

# 위의 변수 n, m, k를 입력
n, m, k = map(int, input().split())

# n개의 리스트 요소의 값 입력
data = list(map(int, input().split()))

# 입력 받은 리스트 요소 정렬
data.sort()

# 가장 큰 수
# 오름차순 정렬과 리스트 인덱스는 0부터 시작이므로 입력한 n값 -1이 뒷값
first = data[n-1]

# 다음 큰 수
# first와 방식 동일
second = data[n-2]

# 결과값 저장
result = 0

# 핵심
# 수열 방식 + 묶음 반복
# 반복되는 수열의 길이는 (k+1) -> 가장 큰 수를 중복 가능한 k번 실행 후 다음 큰수를 한 번 사용.
# m / (k+1) -> 수열이 반복되는 횟수 -> 덩어리로 몇 번 반복되는가
# (m / (k+1)) * k -> 가장 큰 수의 사용 횟수

count = int(m / (k+1)) * k

# 나누어 떨어지지 않을 경우 남은 k의 사용 횟수 더하기
count += m / (k+1) 

# 결과값 저장
result = 0

# 가장 큰 수 더해지는 횟수로 계산
result += (count) * first

# 다음 큰 수로 더해지는 횟수로 계산
result += (m - count) * second

# 결과값 출력
print(result)
